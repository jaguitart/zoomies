{"ast":null,"code":"// constants\nconst SET_ORGANIZATION = 'organizations_session/SET_ORGANIZATION';\nconst REMOVE_ORGANIZATION = 'organizations_session/REMOVE_ORGANIZATION';\n\nconst setOrganization = organization => ({\n  type: SET_ORGANIZATION,\n  payload: organization\n});\n\nconst removeOrganization = () => ({\n  type: REMOVE_ORGANIZATION\n});\n\nconst initialState = {\n  organization: null\n};\nexport const org_authenticate = () => async dispatch => {\n  const response = await fetch('/api/organizations_auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return;\n    }\n\n    dispatch(setOrganization(data));\n  }\n};\nexport const org_login = (email, password) => async dispatch => {\n  const response = await fetch('/api/organizations_auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setOrganization(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport const org_logout = () => async dispatch => {\n  const response = await fetch('/api/organizations_auth/logout', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeOrganization());\n  }\n};\nexport const org_signUp = (name, email, password) => async dispatch => {\n  const response = await fetch('/api/organizations_auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setOrganization(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.'];\n  }\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_ORGANIZATION:\n      return {\n        organization: action.payload\n      };\n\n    case REMOVE_ORGANIZATION:\n      return {\n        organization: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jaguitart/appAcademy/mod7/zoomies/react-app/src/store/organizations_session.js"],"names":["SET_ORGANIZATION","REMOVE_ORGANIZATION","setOrganization","organization","type","payload","removeOrganization","initialState","org_authenticate","dispatch","response","fetch","headers","ok","data","json","errors","org_login","email","password","method","body","JSON","stringify","status","org_logout","org_signUp","name","reducer","state","action"],"mappings":"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","sourcesContent":["// constants\nconst SET_ORGANIZATION = 'organizations_session/SET_ORGANIZATION';\nconst REMOVE_ORGANIZATION = 'organizations_session/REMOVE_ORGANIZATION';\n\nconst setOrganization = (organization) => ({\n  type: SET_ORGANIZATION,\n  payload: organization\n});\n\nconst removeOrganization = () => ({\n  type: REMOVE_ORGANIZATION,\n})\n\nconst initialState = { organization: null };\n\nexport const org_authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/organizations_auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n  \n    dispatch(setOrganization(data));\n  }\n}\n\nexport const org_login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/organizations_auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  \n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setOrganization(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\nexport const org_logout = () => async (dispatch) => {\n  const response = await fetch('/api/organizations_auth/logout', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeOrganization());\n  }\n};\n\n\nexport const org_signUp = (name, email, password) => async (dispatch) => {\n  const response = await fetch('/api/organizations_auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n    }),\n  });\n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setOrganization(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_ORGANIZATION:\n      return { organization: action.payload }\n    case REMOVE_ORGANIZATION:\n      return { organization: null }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}