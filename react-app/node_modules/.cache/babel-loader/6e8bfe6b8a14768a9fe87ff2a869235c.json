{"ast":null,"code":"var _jsxFileName = \"/home/jaguitart/appAcademy/mod7/zoomies/react-app/src/components/auth/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = props => {\n  _s();\n\n  const user = useSelector(state => state.session.user);\n  const organization = useSelector(state => state.organization_session.organization);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"HI\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this) // <Route {...props}>\n  //   {(user)? props.children  : <Redirect to='/login'/> || (organization)? props.children  : <Redirect to='/login' />}\n  // </Route>\n  ;\n};\n\n_s(ProtectedRoute, \"RbCh+fWAlpnrIkKNtqVzdcxNVbY=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/jaguitart/appAcademy/mod7/zoomies/react-app/src/components/auth/ProtectedRoute.js"],"names":["React","useSelector","Route","Redirect","ProtectedRoute","props","user","state","session","organization","organization_session"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAC9B,QAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,IAAxB,CAAxB;AACA,QAAMG,YAAY,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACG,oBAAN,CAA2BD,YAArC,CAAhC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAEE;AACA;AACA;AAJF;AAMD,CATD;;GAAML,c;UACSH,W,EACQA,W;;;KAFjBG,c;AAYN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  const user = useSelector(state => state.session.user)\n  const organization = useSelector(state => state.organization_session.organization)\n  return (\n    <p>HI</p>\n    // <Route {...props}>\n    //   {(user)? props.children  : <Redirect to='/login'/> || (organization)? props.children  : <Redirect to='/login' />}\n    // </Route>\n  )\n};\n\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}